"""
pip install -r requirements.txt
python main.py
"""


import logging
import random
from config import SECRET
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
    MessageHandler,
    filters
)

# Enable logging

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)

# set higher logging level for httpx to avoid all GET and POST requests being logged
logging.getLogger("httpx").setLevel(logging.WARNING)

logger = logging.getLogger(__name__)


async def dabl(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    rand_val = f"{random.randint(1, 100):02d}"
    if rand_val[0] == rand_val[1]:
        text = f"{rand_val}! Ну всё, ждем всем чатом."
    else:
        text = f"{rand_val}. Тебе не очень и хотелось."
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text=text
    )


async def chat_dabl(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Echo the user message."""
    err_dabl = ['на дабц', 'ну дабл', 'на даел', 'нк дабл',
                'на набл', 'на бабл', 'на цабл', 'на дажл',
                'нт дабл', 'нм дабл', 'нэ дабл', 'на дадл',
                'нз дабл', 'н* дабл', 'на дагл', 'на дарл',
                'на даба', 'на иабл', 'на двбл', 'на табл',
                'на ьабл', 'нь дабл', 'на дпбл', 'на чабл',
                'на дабы', 'на дмбл', 'на дебл', 'на добл',
                'ба дабл', 'не дабл', 'нп дабл', 'на дабя',
                'на дабъ', 'на дабх', 'на дазл', 'нъ дабл',
                'но дабл', 'на дабо', 'на датл', 'на дъбл',
                'нг дабл', 'на пабл', 'на даул', 'на днбл',
                'аа дабл', 'нч дабл', 'на габл', 'на дчбл',
                'на дыбл', 'эа дабл', 'на дабд', 'нн дабл',
                'на рабл', 'оа дабл', 'на дабе', 'на данл',
                'на даьл', 'на дабу', 'на дацл', 'на дзбл',
                'на оабл', 'жа дабл', 'на щабл', 'на дабэ',
                'да дабл', 'на джбл', 'на дащл', 'на даал',
                'нш дабл', 'иа дабл', 'ьа дабл', 'на дрбл',
                'на дюбл', 'на яабл', 'на даыл', 'нж дабл',
                'на дтбл', 'на дапл', 'ма дабл', 'га дабл',
                'ша дабл', 'ъа дабл', 'на еабл', 'на дябл',
                'на дэбл', 'на юабл', 'на сабл', 'на дашл',
                'еа дабл', 'ча дабл', 'на ъабл', 'ня дабл',
                'на даил', 'ла дабл', 'нл дабл', 'на дабщ',
                'ны дабл', 'на дубл', 'на дьбл', 'ща дабл',
                'нх дабл', 'на дакл', 'ца дабл', 'на дабь',
                'юа дабл', 'на дабр', 'на дасл', 'ни дабл',
                'нб дабл', 'на даол', 'нр дабл', 'на дибл',
                'на дабз', 'на дамл', 'на дабб', 'уа дабл',
                'на жабл', 'на дабк', 'на эабл', 'на даэл',
                'на хабл', 'нц дабл', 'на дхбл', 'на шабл',
                'на вабл', 'ва дабл', 'на дщбл', 'на забл',
                'на дабг', 'на дабс', 'на дабч', 'на далл',
                'на даюл', 'на ыабл', 'на дабю', 'на длбл',
                'на ддбл', 'ха дабл', 'яа дабл', 'на даъл',
                'на дсбл', 'за дабл', 'на дахл', 'са дабл',
                'нщ дабл', 'на дшбл', 'ка дабл', 'на дкбл',
                'на дабж', 'на даял', 'на дабш', 'на давл',
                'на кабл', 'та дабл', 'нд дабл', 'па дабл',
                'на дббл', 'на дабм', 'на дгбл', 'ра дабл',
                'на дабв', 'на лабл', 'нв дабл', 'на дцбл',
                'ню дабл', 'на дачл', 'на даби', 'на дабт',
                'на дабн', 'ыа дабл', 'на уабл', 'на дабп',
                'на мабл', 'на аабл']
    err_tripl = ['нв трипл', 'на щрипл', 'на трипх', 'на тржпл', 'на трипм', 'на мрипл', 'на трирл', 'на трилл',
                 'на трипи',
                 'не трипл', 'ча трипл', 'на трипк', 'ню трипл', 'на трипъ', 'на трипв', 'га трипл', 'ма трипл',
                 'па трипл',
                 'на триул', 'на трупл', 'ни трипл', 'на триол', 'на ррипл', 'нд трипл', 'нг трипл', 'нэ трипл',
                 'на трипэ',
                 'на ирипл', 'на тьипл', 'ра трипл', 'нн трипл', 'нт трипл', 'на трипю', 'на трипз', 'юа трипл',
                 'ка трипл',
                 'н* трипл', 'нь трипл', 'на триэл', 'на тричл', 'на трипн', 'на трипц', 'оа трипл', 'на трдпл',
                 'на трнпл',
                 'на тропл', 'на трепл', 'на ърипл', 'на трапл', 'на тривл', 'на дрипл', 'нм трипл', 'на трипщ',
                 'на шрипл',
                 'ла трипл', 'ны трипл', 'нщ трипл', 'на трспл', 'на тридл', 'на трипа', 'нб трипл', 'са трипл',
                 'аа трипл',
                 'на тмипл', 'на трипр', 'нк трипл', 'на тнипл', 'на брипл', 'на ьрипл', 'на тюипл', 'на трэпл',
                 'нз трипл',
                 'на теипл', 'на тципл', 'на ырипл', 'на тришл', 'на црипл', 'на трицл', 'ьа трипл', 'на трыпл',
                 'уа трипл',
                 'на трипч', 'на тоипл', 'иа трипл', 'на лрипл', 'на триюл', 'нч трипл', 'на тъипл', 'нх трипл',
                 'на трипь',
                 'на юрипл', 'на трипб', 'жа трипл', 'ня трипл', 'ну трипл', 'на ткипл', 'на трихл', 'на трипт',
                 'на трипу',
                 'нл трипл', 'на тсипл', 'на трищл', 'на ерипл', 'на срипл', 'на трчпл', 'на трипд', 'на трвпл',
                 'на триыл',
                 'ца трипл', 'на чрипл', 'на трьпл', 'на нрипл', 'на тыипл', 'на тризл', 'на ярипл', 'на твипл',
                 'на туипл',
                 'на зрипл', 'на эрипл', 'на трппл', 'на тряпл', 'на тэипл', 'на трижл', 'на тритл', 'на ттипл',
                 'на трипп',
                 'на тиипл', 'ба трипл', 'ща трипл', 'да трипл', 'на триел', 'на триъл', 'на арипл', 'на трипг',
                 'на тщипл',
                 'на тдипл', 'за трипл', 'эа трипл', 'на жрипл', 'ва трипл', 'на тршпл', 'на трикл', 'на припл',
                 'нж трипл',
                 'на тшипл', 'ъа трипл', 'на тзипл', 'на триьл', 'на трипс', 'на орипл', 'на тригл', 'на тпипл',
                 'на тркпл',
                 'на тримл', 'на тчипл', 'на трипе', 'на трщпл', 'на триал', 'на трбпл', 'на трипы', 'на грипл',
                 'на врипл',
                 'на урипл', 'на тлипл', 'на таипл', 'на триял', 'ыа трипл', 'на тргпл', 'на трхпл', 'еа трипл',
                 'на трипш',
                 'на тжипл', 'на триил', 'на тгипл', 'на тринл', 'на тръпл', 'нъ трипл', 'яа трипл', 'на трипл',
                 'ха трипл',
                 'на тхипл', 'нш трипл', 'но трипл', 'на тяипл', 'на трзпл', 'на тртпл', 'на тррпл', 'на трисл',
                 'на хрипл',
                 'на тбипл', 'на трцпл', 'на трюпл', 'на трибл', 'на трипж', 'на трипя', 'нр трипл', 'та трипл',
                 'на трмпл',
                 'ша трипл', 'нц трипл', 'на крипл', 'нп трипл', 'на трипо', 'на трлпл']

    text = update.message.text

    if "на дабл" in text.lower() or "на_дабл" in text.lower():
        rand_val1 = f"{random.randint(10, 99):02d}"
        rand_val2 = f"{random.randint(10, 99):02d}"
        if rand_val1[0] == rand_val1[1]:
            text = f"{rand_val1}! Ну всё, ждем всем чатом."
        elif rand_val2[0] == rand_val2[1]:
            text = f"{rand_val2}! Ну всё, ждем всем чатом."
        else:
            text = f"{rand_val1} Тебе не очень и хотелось."
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=text
        )
    else:
        for var in err_dabl:
            if var in text.lower():
                rand_val1 = f"{random.randint(10, 100):02d}"
                rand_val2 = f"{random.randint(10, 100):02d}"
                if rand_val1[0] == rand_val1[1]:
                    text = f"Ебать ты калека. Нормально пиши. {rand_val1} У тебя дабл... на этот раз."
                elif rand_val2[0] == rand_val2[1]:
                    text = f"Пиздец ты криворукий. Нормально пиши.{rand_val2} У тебя дабл... на этот раз."
                else:
                    text = f"{rand_val1} Написал через жопу, получил через жопу."
                await context.bot.send_message(
                    chat_id=update.effective_chat.id,
                    text=text
                )
                break

    if "на трипл" in text.lower() or "на_трипл" in text.lower():
        rand_val1 = f"{random.randint(100, 999):03d}"
        rand_val2 = f"{random.randint(100, 999):03d}"
        if rand_val1[0] == rand_val1[1] == rand_val1[2]:
            text = f"{rand_val1}! Кому-то пиздец, Ожидаем."
        elif rand_val2[0] == rand_val2[1] == rand_val2[2]:
            text = f"{rand_val2}! Кому-то пиздец, Ожидаем."
        else:
            text = f"{rand_val1} Никому этого блять не хотелось."
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=text
        )
    else:
        for var in err_tripl:
            if var in text.lower():
                rand_val1 = f"{random.randint(100, 999):03d}"
                rand_val2 = f"{random.randint(100, 999):03d}"
                if rand_val1[0] == rand_val1[1] == rand_val1[2]:
                    text = f"Ебать ты калека. Нормально пиши. {rand_val1} У тебя трипл... на этот раз."
                elif rand_val2[0] == rand_val2[1] == rand_val2[2]:
                    text = f"Пиздец ты криворукий. Нормально пиши.{rand_val2} У тебя трипл... на этот раз."
                else:
                    text = f"{rand_val1} Ты чем по клавиатуре блять тыкаешь"
                await context.bot.send_message(
                    chat_id=update.effective_chat.id,
                    text=text
                )
                break


def main() -> None:
    """Start the bot."""
    # Create the Application and pass it your bot's token.
    application = Application.builder().token(SECRET).build()

    # Keep track of which chats the bot is in
    application.add_handler(CommandHandler("dabl", dabl))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, chat_dabl))

    application.run_polling()


if __name__ == "__main__":
    main()
